.TH subscription-manager 8 "November 12, 2010" "version 1.0" "Subscription Management"  Pradeep Kilambi 
.SH NAME
subscription-manager \- Register machines and manage subscriptions to products.

.SH SYNOPSIS
subscription-manager
.I command [options]

.SH DESCRIPTION
subscription-manager registers machines to an entitlement service so that the machine can receive updates based on its subscriptions to any kind of software products.
Subscription Manager can list both available and used (consumed) subscriptions and subscribe to and 
unsubscribe from specific subscriptions. This tool can be used to autosubscribe a system, as well.

.PP
Entitlement and subscription tracking are a new compliance feature available for Red Hat platforms. The 
.B subscription-manager 
script allows machines to be registered and subscribed as part of the kickstart process and to be managed 
through the command line after installation.

.PP
Available subscriptions are based on the specific information about the machine's architecture. An entitlement is only considered 
.I available 
if the platform and hardware can support that specific product. As a secondary feature, the Subscription Manager also collects and 
summarizes system facts. These facts can be edited in the Subscription Manager configuration and displayed through Subscription Manager.

.PP
There is also a Subscription Manager GUI, which can be invoked simply by running 
.B subscription-manager-gui 
from the command line.

.SH COMMANDS AND OPTIONS
.B subscription-manager 
has specific options available for each command, depending on what operation is being performed. The Subscription Manager commands are related to the different subscription operations:

.IP
1. register

.IP
2. unregister

.IP
3. identity

.IP
4. subscribe

.IP
5. unsubscribe

.IP
6. refresh

.IP
7. list

.IP
8. facts

.IP
9. clean


.SS COMMON OPTIONS
.TP
.B -h, --help
Prints the specific help information for the given command.

.TP
.B --debug=DEBUG
Sets the debug level to use for verbose output.

.SS REGISTER OPTIONS
The 
.B register 
command registers a new machine to the entitlement service.

.TP
.B --username=USERNAME
Gives the username for the account which is registering the system; this user account is usually tied to the user account for the content delivery system which supplies the content. Optional, for user-based authentication.

.TP
.B --password=PASSWORD
Gives the user account password. This is required.

.TP
.B --type=CONSUMERTYPE
Sets the type of consumer to register. Most systems will use the default value of 
.B system.
For development or test systems, this can be 	 
.B person
, which indicates a personal (rather than organizational) entitlement subscription. Other systems can be
.B candlepin
for a local content service or 
.B domain
for an IP domain.

.TP
.B --name=CONSUMERNAME
Sets the name of the consumer (machine) to register. This defaults to be the same as the username.


.TP
.B --consumerid=CONSUMERID
References an existing consumer ID to reregister a system. The consumer ID is used as an inventory number for the system in the entitlements service database. If the entitlements data are lost or corrupted, reregistering the system restores it.


.TP
.B --autosubscribe
Automatically subscribes this system to the best-matched compatible subscription.

.TP
.B --force
Registers the system even if it is already registered. Normally, any register operations will fail if the machine is already registered. The existing consumer entry and its subscriptions are deleted.

.SS UNREGISTER OPTIONS
The 
.B unregister 
command unregisters a machine, which strips its subscriptions and removes the machine from the entitlement service.

.PP
This command has no options.

.SS IDENTITY OPTIONS
The 
.B identity 
command handles the UUID of a system, which identifies the system to the entitlement service after registration. This command can simply return the UUID or it can be used to restore the registration of a previously-registered system to the entitlement service.

.TP
.B --regenerate
Requests that the entitlement service issue a new identity certificate for the system, using an existing UUID in the original identity certificate. If this is used alone, then the
.B identity 
command also uses the original identity certificate to bind to the entitlement server, using certificate-based authentication.

.TP
.B --username=USERNAME
Gives the username for the account which is registering the system; this user account is usually tied to the user account for the content delivery system which supplies the content. Optional, for user-based authentication.

.TP
.B --password=PASSWORD
Gives the user account password. Optional, for user-based authentication.


.SS SUBSCRIBE OPTIONS
The 
.B subscribe
command allocates a specific subscription to the machine. 

.TP
.B --regtoken=TOKEN
Gives the subscription number that identifies a specific product entitlement. Either the 
.B --regtoken
or the 
.B --pool
option is required.

.TP
.B --pool=POOLID
Gives the ID for the entitlements pool (collection of products) to subscribe the machine to. Either the 
.B --regtoken
or the 
.B --pool
option is required.

.TP
.B --email=EMAIL
Gives an optional email address to which to send a notification email when the activation is complete. This is only used with the 
.B --regtoken
option.

.TP
.B --locale=LOCALE
Sets an optional language to use for for the email notification. This uses the four-letter locale codes like 
.I en_us
for English or
.I de_de
for German.

.SS UNSUBSCRIBE OPTIONS
The 
.B unsubscribe
command removes a subscription allocation from the machine. (This does not uninstall the associated products.)

.TP
.B --serial=SERIALNUMBER
Gives the serial number of the entitlement certificate for the specific product that is being unsubscribed. Entitlement certificates for subscribed products are in a certificate, in 
.B /etc/pki/entitlement/product/<serial_number>.pem.

.TP
.B --all
Unsubscribes the system from 
.I all 
of the products it's subscribed to.

.SS REFRESH OPTIONS
The 
.B refresh
command pulls the latest entitlement data from the server. Normally, the system polls the entitlement server at a set interval (4 hours by default) to check for any changes in the available subscriptions. The 
.B refresh
command checks with the entitlement server right then, outside the normal interval.

.PP
This command has no options.


.SS LIST OPTIONS
The 
.B list
command lists all of the subscriptions that are compatible with a machine. The options allow the list to be filtered by subscriptions that are used by the machine or unused subscriptions that are available to the machine.

.TP
.B --available
Lists available subscriptions which the machine has not subscribed to.

.TP
.B --consumed
Lists all of the subscriptions that the machine is currently subscribed to.

.TP
.B --all
Lists all possible subscriptions that have been purchased by the organization, even if they don't match the architecture of the system. This is used with the
.B --available 
option. 

.SS FACTS OPTIONS
The
.B facts 
command lists the system information, like the release version, number of CPUs, and other architecture information.

.TP
.B --list
Lists the system information. These are simple 
.I attribute: value
pairs that reflect much of the information in the 
.B /etc/sysconfig
directory.
.nf
cpu.architecture: x86_64
cpu.core(s)_per_socket: 1
cpu.cpu(s): 2
cpu.cpu_family: 6
cpu.cpu_mhz: 1861.776
cpu.cpu_op-mode(s): 64-bit
cpu.cpu_socket(s): 2
cpu.hypervisor_vendor: KVM
cpu.model: 2
cpu.numa_node(s): 1
cpu.numa_node0_cpu(s): 0,1
cpu.stepping: 3
cpu.thread(s)_per_core: 1
cpu.vendor_id: GenuineIntel
cpu.virtualization_type: full
distribution.id: Santiago
distribution.name: Red Hat Enterprise Linux Workstation
distribution.version: 6.0
----

.fi

.TP
.B --update
Updates the system information. This is particularly important whenever there is a hardware change (such as adding a CPU) or a system upgrade because these changes can affect the subscriptions that are compatible with the system.

.SS CLEAN OPTIONS
The 
.B clean
command removes all of the subscription and identity data from the local system 
.I without affecting the consumer information in the entitlement service. 
This means that any of the subscriptions consumed by the system are still consumed and are not available for other systems to use. The 
.B clean
command is useful in cases where the local entitlement information is corrupted or lost somehow, and the system will be reregistered using the 
.B register --consumerid=EXISTING_ID
command.

.PP
This command has no options.

.SH USAGE
.B subscription-manager 
has two major tasks:

.IP
1. Handling the registration for a given system to an entitlement service

.IP
2. Handling the product subscriptions for a machine.

.PP
.B subscription-manager 
makes it easier for network administrators to maintain compliance with software subscriptions and updates by tracking and managing what machines are subscribed to and when those subscriptions expire or are exceeded.



.SS REGISTERING AND UNREGISTERING MACHINES
A machine is either 
.I registered 
to an entitlement and content service -- which makes all of the subscriptions available to the machine -- or it is not registered. Unregistered machines are necessarily out of compliance with software entitlements because there is no way to record that the subscriptions have been used or to renew them.

.PP
Machines are usually registered to an entitlement service as part of their initial configuration, such as the firstboot or kickstart process. However, machines can be registered manually after they are configured, can be removed from a content service, or reregistered.

.PP
If a machine has never been registered (not even during firstboot), then the 
.B register
command will register the machine with whatever entitlement service is configured in the 
.B /etc/rhsm/rhsm.conf
file. This command requires, at a minimum, the username and password for an account to connect to the entitlement service.

.PP
For example:
.RS
.nf
subscription-manager register --username=admin --password=secret
.fi


.RE
.PP
Some information is assigned automatically. Subscription Manager automatically generates a unique consumer ID for the system which is used by the entitlement service and it assigns a consumer type, which indicates what kinds of software are available for the machine. The name for the consumer entry can be manually assigned (for use within a local inventory system, for instance). A handful of subscriptions (such as specialized servers for content or identity management) have their own specific consumer type. For example:
.nf
subscription-manager register --username=admin --password=secret --type=system --name=server1
.fi


.PP
If a system is registered and then somehow its entitlement information is lost -- a drive crashes or the certificates are deleted or corrupted -- the system can be reregistered, with all of its subscriptions restored, by registering with the existing consumer ID.

.RS
.nf
subscription-manager register --username=admin --password=secret --consumerid=1234abcd
.fi
.RE

.PP
A consumer uses an SSL client certificate (its identity certificate) to authenticate to the entitlements system to check for updates or changes to subscriptions. If the identity certificate is lost or corrupted, it can be regenerated using the 
.B identity
command.
.RS
.nf
subscription-manager identity --regenerate --username=admin --password=secret
.fi
.RE

.PP
A machine is unregistered and removed as a consumer from the entitlements service simply by running the 
.B unregister
command. Unregistering and unsubscribing a service can free up entitlement subscriptions when a machine is taken offline or moved to a different department. 
.RS
.nf
subscription-manager unregister
.fi
.RE


.SS SUBSCRIBING AND UNSUBSCRIBING TO PRODUCTS
A 
.I subscription
is essentially the right to install, use, and receive updates for a Red Hat product. (Sometimes multiple individual software products are bundled together into a single subscription.) When a machine is registered, the entitlements and content service is aware of the machine and has a list of all of the possible product subscriptions that the machine can install and use. A machine is allocated a product subscription by 
.I subscribing
to the entitlement pool that makes that product available. A machine releases that entitlement (meaning, it unassigns that product so that another machine can use that entitlement count) by 
.I unsubscribing.

.PP
Subscribing a machine requires either the registration ID that was given when a product was purchased (the 
.I --regtoken
option) or the ID for the entitlement pool (the 
.I --pool
option). For example:
.RS
.nf
subscription-manager subscribe --email="admin@example.com" --regtoken=XYZ01234567
subscription-manager subscribe --pool=ff8080812bc382e3012bc3845da100d2
.fi
.RE

.PP
Unsubscribing a machine removes it from the product or entitlement pool, which releases that entitlement subscription it had consumed. The machine remains registered with the entitlement service. Each product has an identifying X.509 certificate installed with it. To unsubscribe from a subscription for a specific product, specify the serial number of the certificate:
.RS
.nf
subscription-manager unsubscribe --serial=1128750306742160
.fi
.RE

.PP
Giving the 
.B unsubscribe
command with the 
.B --all
option unsubscribes the machine from every subscription it has consumed.

.PP
An option with registration, 
.B --autosubscribe
, will automatically subscribe the newly-registered system to the entitlements pool which best matches the system architecture and configuration. This option allows the system to be subscribed as part of the registration process, rather than separately managing subscriptions.
.RS
.nf
subscription-manager register --username=admin --password=secret --autosubscribe
.fi
.RE


.SS UPDATING FACTS
The information about a system, such as its hardware and CPU, its operating system versions, and memory, are collected by Subscription Manager in a list of 
.I facts.
Subscription Manager uses these facts to determine what purchased entitlements are compatible with the system. Whenever these facts changes (such as installing an additional CPU), the facts can be updated immediately using the 
.B facts
command.

.RS
.nf
subscription-manager facts --update
.fi
.RE

The collected facts can also be overridden by creating a JSON file in the 
.B /etc/rhsm/facts/
directory. These have simple formats that define a fact and value:
.RS
.nf
{"fact1": "value1","fact2": "value2"}
.fi
.RE

.PP
When these fact files are added, running the 
.B facts
command will update the collected facts with the new, manual facts or values.

.SS ENTITLEMENTS AND KICKSTART
The 
.B subscription-manager
tool can be run as a post-install script as part of the kickstart installation process. This allows entitlement management (registration and subscription) to be automated along with installation. For example:
.RS
.nf
%post --log=/root/ks-post.log
/usr/sbin/subscription-manager register --username admin --password secret --autosubscribe
.fi
.RE

.SS GETTING INFORMATION FROM CERTIFICATES
Both Subscription Manager and product information is contained in X.509 certificates. To obtain this information, use tools like 
.B openssl
or
.B pk12util
to pretty-print the certificate information. For example:
.nf
openssl x509 -text -in /etc/pki/consumer/cert.pem

Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number: 9 (0x9)
        Signature Algorithm: sha1WithRSAEncryption
        Issuer: CN=server.example.com, C=US, L=Mountain View
        Validity
            Not Before: Sep 21 19:01:01 2010 GMT
            Not After : Sep 21 19:01:01 2011 GMT
        Subject: CN=78cf3c59-24ec-4228-a039-1b554ea21319
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                Public-Key: (2048 bit)
                Modulus:
                    00:cd:22:86:2b:77:1b:40:b2:be:8e:06:8e:b8:df:
.fi


.SH FILES
.IP
* /etc/pki/consumer/*.pem
.IP
* /etc/pki/entitlement/product/<serial>.pem
.IP
* /etc/pki/product/*.pem
.IP
* /etc/rhsm/rhsm.conf 
.IP
* /etc/rhsm/facts/*.facts

.SH AUTHORS
Pradeep Kilambi, <pkilambi@redhat.com>

